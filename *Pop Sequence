Problem：https://pintia.cn/problem-sets/16/problems/665

//模拟堆栈过程算法
#include<iostream>
#include<stack>
#include<queue>
using namespace std;

bool Judge(int M, int N)
{
	int i = 1, t;
	stack <int> s;
	queue <int> q;
	while(N-- > 0)
	{
		cin >> t;
		q.push(t);
	}
	while (!q.empty())
	{
		t = q.front();
		q.pop();

		while (i <= t)
		{
			s.push(i++);
			if (s.size() > M)
				return false;
		}

		if (s.top() == t)
			s.pop();
		else
			return false;
	}

	return true;
}

int main()
{
	int M, N, K;
	cin >> M >> N >> K;
	while (K-- > 0)
	{
		if (Judge(M, N))
			cout << "YES" << endl;
		else
			cout << "NO" << endl;
	}
	return 0;
}

//逻辑算法
#include<iostream>
#include<queue>
using namespace std;

bool Judge(int M, int N)
{
	int i, t, max, *a;
	a = new int[N];
	for (i = 0; i < N; i++)
		cin >> a[i];
	i = 0;
	while (i < N)
	{
		queue <int> q;
		q.push(a[i++]);
		max = q.front();
		while (i < N&&a[i] < max)
		{
			q.push(a[i++]);
			if (q.size() > M)
			{
				delete(a);
				return false;
			}
		}
		while (!q.empty())
		{
			t = q.front();
			q.pop();
			if (!q.empty() && t < q.front())
			{
				delete(a);
				return false;
			}
		}
	}
	delete(a);
	return true;
}

int main()
{
	int M, N, K;
	cin >> M >> N >> K;
	while (K-- > 0)
	{
		if (Judge(M, N))
			cout << "YES" << endl;
		else
			cout << "NO" << endl;
	}
	return 0;
}
