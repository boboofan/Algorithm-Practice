https://pta.patest.cn/pta/test/3512/exam/4/question/73453

#include<iostream>
using namespace std;

int* BuildTree(int N)
{
	int i, j, t, *a;
	a = new int[2 * N + 1];
	for (i = 0; i < N; i++)
		a[i] = 0;
	for (i = 0; i < N; i++)
	{
		j = 0;
		cin >> t;
		while (j < (2 * N + 1))
		{
			if (a[j] == 0)
			{
				a[j] = t;
				break;
			}
			else
			{
				if (t < a[j])
					j = j * 2 + 1;
				else
					j = j * 2 + 2;
			}
		}
	}
	return a;
}

int IsSame(int *t, int N)
{
	int *t1 = BuildTree(N);
	for (int i = 0; i < (2 * N + 1); i++)
	{
		if (t[i] != t1[i])
		{
			delete(t1);
			return 0;
		}
	}
	delete(t1);
	return 1;
}

int main()
{
	int N, L;
	cin >> N >> L;
	while (N != 0)
	{
		int *t = BuildTree(N);
		while (L-- > 0)
		{
			if (IsSame(t, N))
				cout << "Yes" << endl;
			else
				cout << "No" << endl;
		}
		delete(t);
		cin >> N >> L;
	}
	return 0;
}
